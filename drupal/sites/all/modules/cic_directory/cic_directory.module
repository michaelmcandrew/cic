<?php

define(DATABASE_SEARCH, 'Church or project search');

function cic_directory_menu() {
	$items['directory'] = array(
		'page callback' => 'cic_directory_search',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
	);
	$items['directory/autocomplete/church'] = array(
		'title' => t('Church autocomplete'),
		'page callback' => 'cic_directory_church_autocomplete',
		'type' => MENU_CALLBACK,
		'access callback' => TRUE,
	);
	$items['directory/view'] = array(
		'page callback' => 'cic_directory_view',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
	);
	$items['directory/search'] = array(
		'page callback' => 'cic_directory_search',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
	);
	$items['directory/results'] = array(
		'page callback' => 'cic_directory_results',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
	);
	$items['directory/results/map'] = array(
		'page callback' => 'cic_directory_results_map',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
	);
	return $items;
}

function cic_directory_church_autocomplete($string = '') {
  $matches = array();
  if ($string) {
    $result = db_query_range("SELECT display_name FROM {civicrm_contact} WHERE LOWER(display_name) LIKE LOWER('%%%s%%') AND (`contact_sub_type`='Church' OR `contact_sub_type`='Project') ORDER BY display_name", $string, 0, 10);
    while ($line = db_fetch_object($result)) {
      $matches[$line->display_name] = $line->display_name;
    }
  }
  drupal_json($matches);
}


function cic_directory_theme() {
	return array(
		'cic_directory_view' => array(
			'arguments' => array('church' => NULL,'address_block' => NULL, 'about' => NULL, 'links' => NULL, 'docs' => NULL),
			'template' => 'cic-directory-view',
	),
		'cic_directory_map' => array(
			'arguments' => array('churches' => NULL),
			'template' => 'cic-directory-map',
	),
		'cic_directory_search' => array(
			'arguments' => array('form' => NULL,'results' => NULL, 'pager' => NULL, 'districts' => NULL),
			'template' => 'cic-directory-search',
	)
  );
}



function cic_directory_search_form() {
		
	
	$who_options[]=$what_options[]=$where_options[]=' - select - ';
	
	$result = db_query('SELECT `label` FROM {civicrm_option_value} WHERE option_group_id=63 ORDER BY `label`');
	while ($data = db_fetch_object($result)){
		$who_options[$data->label]=$data->label;
	}
	$result = db_query('SELECT `label` FROM {civicrm_option_value} WHERE option_group_id=64 ORDER BY `label`');
	while ($data = db_fetch_object($result)){
		$what_options[$data->label]=$data->label;
	}
	$result = db_query('SELECT DISTINCT `district_borough_council_3` FROM {civicrm_value_location_details_2} ORDER BY `district_borough_council_3`');
	while ($data = db_fetch_object($result)){
		if(trim($data->district_borough_council_3)){
			$where_options[$data->district_borough_council_3]=$data->district_borough_council_3;
		}
	}
	
	// make sense of the district and ciruit relationships using the numbers at the end of their codes
	$cd = cic_directory_get_circuits_districts();
	$circuits=$cd['circuits'];
	$districts=$cd['districts'];
	$district_options['']=' - select - ';

	foreach($districts as $key => $district){
		$district_options[$key]=$district['name'];
		$circuitsByDistrict[$district['code']]['']=' - select - ';
	}
	// removing one of the districts from the dropdown - 'Connexial Posts' (153)
	unset($district_options[153]);

	foreach($circuits as $key => $circuit){
		$circuitsByDistrict[$circuit['districtCode']][$key]=$circuit['name'];
	}	
	
	// print_r($district_options);exit;
	
	$form['search']['#type']='fieldset';
	$form['#method'] = 'post';
	$form['#action'] = '/directory/results';
	$form['search']['name'] = array(
		'#title' => 'Church or project name',
		'#type' => 'textfield',
		'#description' => 'Type a full or partial name',
		'#autocomplete_path' => 'directory/autocomplete/church',  
		'#default_value' => $_SESSION['cic_directory']['name']
	);
	$form['search']['district'] = array(
		'#title' => 'District',
		'#type' => 'select',
		'#options' => $district_options,		
		'#description' => 'What district is the church or project in?',
		'#default_value' => $_SESSION['cic_directory']['district']
	);
	foreach($districts as $district){
		
		$form['search']['circuit-'.$district['code']] = array(
			'#title' => 'Circuits in '.$district['name'],
			'#type' => 'select',
			'#options' => $circuitsByDistrict[$district['code']],		
			'#description' => 'You can choose a Circuit to further narrow your search',
			'#default_value' => $_SESSION['cic_directory']['circuit-'.$district['code']]
		);
		
	}
	$form['search']['who'] = array(
		'#title' => 'Whom we serve',
		'#type' => 'select',
		'#options' => $who_options,		
		'#description' => 'Whom do they work with?',
		'#default_value' => $_SESSION['cic_directory']['who']
	);
	$form['search']['what'] = array(
		'#title' => 'What we do',
		'#type' => 'select',
		'#options' => $what_options,		
		'#description' => 'What do they do?',
		'#default_value' => $_SESSION['cic_directory']['what']
	);
	$form['search']['where'] = array(
		'#title' => 'Where',
		'#type' => 'select',
		'#options' => $where_options,		
		'#description' => 'In which geographical area do they work?',
		'#default_value' => $_SESSION['cic_directory']['where']
	);
	$form['search']['search'] = array(
		'#type' => 'submit',
		'#value' => 'Search'
	);
	return $form;
}

function cic_directory_get_form_elements() {
	$search_form=cic_directory_search_form();
	foreach($search_form['search'] as $k => $v) {
		if(substr($k, 0, 1)!='#'){
			$array[]=$k;
		}
	}
	return $array;
}

function cic_directory_search_form_submit($form, &$form_state) {
	foreach(cic_directory_get_form_elements() as $v) {
		$_SESSION['cic_directory'][$v]=$form_state['values'][$v];
	}
}

function cic_directory_get_circuits_districts(){
	$result=db_query("SELECT id, name FROM civicrm_membership_type WHERE name!='-' ORDER BY name");
	while($row=db_fetch_object($result)){
		$openingBracketPos=strrpos($row->name,'(');
		$closingBracketPos=strrpos($row->name,')');
		$length=$closingBracketPos-$openingBracketPos-1;
		$code=trim(substr($row->name, $openingBracketPos+1, $length));
		if(strpos($code, '/')===FALSE){
			$districts[$row->id]=array('code'=>$code, 'name'=>$row->name);
			$districtsByCode[$code]=$row->id;
		} else{
			$slashPos=strpos($code, '/');
			$districtCode=substr($code, 0, $slashPos);
			$circuits[$row->id]=array('code'=>$code, 'name'=>$row->name, 'districtCode'=>$districtCode);
		}
	}
	foreach($circuits as $key => $circuit){
		$circuits[$key]['district']=$districts[$districtsByCode[$circuit['districtCode']]]['name'];
	}
	return array('circuits'=>$circuits, 'districts'=>$districts);
}

function cic_directory_search() {
	drupal_set_title(DATABASE_SEARCH);
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	
	// Set Breadcrumbs
	drupal_set_breadcrumb($breadcrumb);
	
	
	foreach(cic_directory_get_form_elements() as $v) {
	unset($_SESSION['cic_directory'][$v]);
	}	
	$form = drupal_get_form('cic_directory_search_form');
	
	$cd=cic_directory_get_circuits_districts();
	return theme('cic_directory_search', $form, null, null, $cd['districts']);
	
	
}

function _cic_directory_build_query() {
	// this function returns the SQL and the args of the query
	$select_clauses[] = "SELECT ca.*, contact_sub_type, cc.id as contact_id, cc.display_name, cwho.who_do_we_serve__new_12 as who, cwhere.district_borough_council_3 as `where`, what_do_we_do_13 as `what`, ward_4 as ward ";
	$from_clauses[] = "FROM `civicrm_contact` AS cc";
	$from_clauses[] = "LEFT JOIN `civicrm_address` AS ca ON cc.id=ca.contact_id AND ca.is_primary";
	$from_clauses[] = "LEFT JOIN `civicrm_value_who_do_they_serve_details_3` AS cwho ON cc.id=cwho.entity_id";
	$from_clauses[] = "LEFT JOIN `civicrm_value_location_details_2` AS cwhere ON cc.id=cwhere.entity_id";
	$from_clauses[] = "LEFT JOIN `civicrm_membership` AS cmem ON cc.id=cmem.contact_id";
	$where_clauses[] = "WHERE NOT is_deleted AND (`contact_sub_type`='Church' OR `contact_sub_type`='Project') ";
	$order_by_clauses[] = "ORDER BY display_name ASC";
	
	if(isset($_SESSION['cic_directory']['name']) && $_SESSION['cic_directory']['name']!=''){
		$where_clauses[] = 'AND cc.display_name LIKE "%%%s%%"';
		$arg[]=$_SESSION['cic_directory']['name'];
	}
	if(isset($_SESSION['cic_directory']['who']) && $_SESSION['cic_directory']['who']!='0'){
		$where_clauses[] = 'AND cwho.who_do_we_serve__new_12 LIKE "%%%s%%"';
		$arg[]=$_SESSION['cic_directory']['who'];
	}
	if(isset($_SESSION['cic_directory']['what']) && $_SESSION['cic_directory']['what']!='0'){
		$where_clauses[] = 'AND cwho.what_do_we_do_13 LIKE "%%%s%%"';
		$arg[]=$_SESSION['cic_directory']['what'];
	}
	if(isset($_SESSION['cic_directory']['where']) && $_SESSION['cic_directory']['where']!=='0'){
		$where_clauses[] = 'AND cwhere.district_borough_council_3 LIKE "%%%s%%"';
		$arg[]=$_SESSION['cic_directory']['where'];
	}
	
	$cd=cic_directory_get_circuits_districts();
	foreach($cd['districts'] as $key => $d){
		if($_SESSION['cic_directory']['district']==$key){
			$dc=$d['code'];
		}
	}

	if(isset($_SESSION['cic_directory']['district']) && $_SESSION['cic_directory']['district']!=0){
		
		
		if($_SESSION['cic_directory']['circuit-'.$dc]==''){
			$where_clauses[]=' AND ( 0';
			foreach($cd['circuits'] as $key => $c){
				if($c['districtCode']==$dc)
				$where_clauses[] = " OR cmem.membership_type_id = $key ";
			}
			$where_clauses[]=' ) ';
		}else{
			$where_clauses[] = 'AND cmem.membership_type_id = "%d"';
			$arg[]=$_SESSION['cic_directory']['circuit-'.$dc];
		}
	}
	
	
	$select=implode("\n", $select_clauses);
	$from=implode("\n", $from_clauses);
	$where=implode("\n", $where_clauses);
	$order_by=implode("\n", $order_by_clauses);
	
	$sql="$select\n$from\n$where\n$order_by";
	return array('sql'=>$sql, 'arg'=>$arg); 
}





function cic_directory_results() {
	//clear the cache so that not logged in people don't get other people's search criteria.  necessary because of how we are using the session to populate the search form
	global $base_root;
	cache_clear_all($base_root.'/directory/results%', 'cache_page', TRUE);
	//cache_clear_all('*', 'cache_page', TRUE);
	
	//set some page info
	drupal_set_title('Results');
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l(DATABASE_SEARCH, 'directory/search');
	drupal_set_breadcrumb($breadcrumb);
	civicrm_initialize(TRUE);
	require_once 'CRM/Utils/Address.php';
	
	$form = drupal_get_form('cic_directory_search_form');
	
	$build_query = _cic_directory_build_query();
	$sql = $build_query['sql'];
	$arg = $build_query['arg'];
	// print_r($sql);print_r($arg);
//	exit;
	$pager_num = 1;
	$limit = 20;
	$result = db_query($sql, $arg[0], $arg[1], $arg[2], $arg[3], $arg[4], $arg[5], $arg[6], $arg[7], $arg[8], $arg[9]);
	$results['count']=$result->num_rows;
	$result = pager_query($sql, $limit, $pager_num, NULL, $arg[0], $arg[1], $arg[2], $arg[3], $arg[4], $arg[5], $arg[6], $arg[7], $arg[8], $arg[9]);
	$pager = theme('pager', NULL, $limit, $pager_num);
	while ($data = db_fetch_object($result)) {
		$address=CRM_Utils_Address::format((array)$data);
		$icon = $data->contact_sub_type=='Church' ? '<img src="/sites/default/files/church%20icon.jpg">' : '<img src="/sites/default/files/project%20icon.jpg">';
		// make link on display name
		$link = "<a href='/directory/view/{$data->contact_id}'>{$data->display_name}</a>";
		$rows[] = array('type' => $icon, 'name' => $link, 'address' => $address, 'who' => implode(', ', explode(chr(1), substr($data->who,1,-1))),'what' => implode(', ', explode(chr(1), substr($data->what,1,-1))), 'where' => $data->where.', '.$data->ward);
	}
	$header = array('type', 'name', 'address', 'who', 'what', 'where (LA, ward)');
	$results['table'] = theme_table($header, $rows, $attributes = array(), $caption = NULL);		
	$cd=cic_directory_get_circuits_districts();
	return theme('cic_directory_search', $form, $results, $pager, $cd['districts']);
	
	
	
	// 
	// 
	// 
}


function cic_directory_results_map() {
	drupal_set_title('Mapped Results');
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l(DATABASE_SEARCH, 'directory/search');
	$breadcrumb[] = l('Results'	, 'directory/results');
	drupal_set_breadcrumb($breadcrumb);
	civicrm_initialize(TRUE);
	require_once 'CRM/Utils/Address.php';

	drupal_add_css(drupal_get_path('module', 'cic_directory') . '/cic-directory.css');	
	
	//get all the results
	$build_query = _cic_directory_build_query();
	$sql = $build_query['sql'];
	$arg = $build_query['arg'];
	$result = db_query($sql, $arg[0], $arg[1], $arg[2], $arg[3], $arg[4], $arg[5], $arg[6], $arg[7], $arg[8], $arg[9]);


	//put them in a format that suitable to be sent to a google map
	while ($data = db_fetch_object($result)) {
		if(strlen($data->geo_code_1) AND strlen($data->geo_code_2)){

			$address=CRM_Utils_Address::format((array)$data);
			$address=explode("\n",trim($address));
			$address=implode(", ",$address);
			$icon = $data->contact_sub_type=='Church' ? 'church%20icon.jpg' : 'project%20icon.jpg';

			$churches[$data->contact_id]=array(
				'name'=>addslashes($data->display_name),
				'address'=>addslashes($address),
				'lat'=>$data->geo_code_1,
				'long'=>$data->geo_code_2,
				'link'=>'/directory/view/'.$data->contact_id,
				'id'=>$data->contact_id,
				'icon'=>$icon
			);
		}
	}
	
	return theme('cic_directory_map', $churches);
	
	
	
	//display them on a google map, probably by creating a google map template and calling that template with the theme function
}
function cic_directory_view($contact_id) {
	// global $custom_theme;
	// 	$custom_theme='garland';	
	// 	
	//set page title
	drupal_set_title($church['display_name']);
	
	// Build Breadcrumbs
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l(DATABASE_SEARCH, 'directory/search');
	$breadcrumb[] = l('Results'	, 'directory/results');

	// Set Breadcrumbs
	drupal_set_breadcrumb($breadcrumb);
	
	//init CiviCRM
	civicrm_initialize(TRUE);
	
	$count = db_result(db_query("SELECT count(*) FROM `civicrm_contact` WHERE NOT is_deleted AND (`contact_sub_type`='Church' OR `contact_sub_type`='Project')  AND id=%d", $contact_id));
	if(!$count){
		drupal_goto('/directory/search');
	};
		
	drupal_add_css(drupal_get_path('module', 'cic_directory') . '/cic-directory.css');	
	//get the contact
	require_once('api/v2/Contact.php');
	$params = array(
		'contact_id' => $contact_id,
	);
	$contact_result = civicrm_contact_get($params);
	
	//basic church info
	$church = $contact_result[$contact_id];


	$params = array(
		'contact_id' => $contact_id,
		'return.custom_1' => 1,
		'return.custom_2' => 1,
		'return.custom_3' => 1,
		'return.custom_4' => 1,
		'return.custom_5' => 1,
		'return.custom_6' => 1,
		'return.custom_7' => 1,
		'return.custom_8' => 1,
		'return.custom_9' => 1,
		'return.custom_10' => 1,
		'return.custom_11' => 1,				
		'return.custom_12' => 1,				
		'return.custom_13' => 1,			
		'return.custom_14' => 1				
	);
	

	$contact_result = civicrm_contact_get($params);
	
	//basic church info
	$church_custom_data = $contact_result[$contact_id];
	
	if($church_custom_data['custom_14']){
		unset($church['email']);		
	}
	
	
	//contact
	require_once 'CRM/Utils/Address.php';
	$address_block=nl2br(CRM_Utils_Address::format($church));
	$params=array( 1 => array( $contact_id, 'Integer'));
	$website_result = CRM_Core_DAO::executeQuery("SELECT url FROM civicrm_website WHERE contact_id = %1", $params);
	$website_result->fetch();
	$church['website']=$website_result->url;
	$church['contact']=db_result(db_query('SELECT group_concat(ind.display_name SEPARATOR " ")
FROM civicrm_contact AS ind
JOIN civicrm_relationship AS rel ON rel.contact_id_a=ind.id AND rel.relationship_type_id=12
JOIN civicrm_contact AS org ON rel.contact_id_b=org.id
WHERE org.id=%d AND !ind.is_deleted',$contact_id));
	
	
	//about
		
	$about['who']=implode(', ', explode(chr(1), substr($church_custom_data['custom_12'],1,-1)));
	$about['what']=implode(', ', explode(chr(1), substr($church_custom_data['custom_13'],1,-1)));
	$about['county']=$church_custom_data['custom_2'];	
	$about['dbc']=$church_custom_data['custom_3'];
	$about['ward']=$church_custom_data['custom_4'];
	$about['circuit']=db_result(db_query('SELECT name FROM civicrm_membership AS cmem JOIN civicrm_membership_type AS cmemtype ON cmem.membership_type_id=cmemtype.id AND cmem.contact_id=%d',$contact_id));
	$about['district']=cic_directory_get_district($about['circuit']);
	
	
	//links
	$links['map']="http://maps.google.co.uk/maps?q={$church['display_name']}@{$church['geo_code_1']},{$church['geo_code_2']}";
	if(strlen($church['postal_code']) == 0 && nbhstats_verify_postcode($church['postal_code'])) {
		$links['ons']='';
	} else {
		$links['ons']="http://neighbourhood.statistics.gov.uk/dissemination/NeighbourhoodSummary.do?width=0&i=0&profileSearchText={$church['postal_code']}";
	}
	$links['stats1011']="http://www.stats4mission.org.uk/begin/";
	$links['stats1112']="http://www.methodist.org.uk/statisticsformission/";
	
	
		
	//docs
	require_once('api/File.php');
	require_once 'CRM/Utils/File.php';
	$files=array(
		1 => $church_custom_data['custom_9'],
		2 => $church_custom_data['custom_10'],
		3 => $church_custom_data['custom_11']
	);
	
	foreach($files as $k => $v){
		
		if($v!=''){
			$params=array('id' => $v);
			$result=crm_get_file($params);
			$link=CRM_Utils_File::cleanFileName($result[$v]['uri']);
			$docs[$k]="<a href=".CIVICRM_UF_BASEURL."civicrm/file?reset=1v&id={$v}&eid={$contact_id}>$link</a>";
		}
	}
	if(!count($docs)){
		$docs['none']='[none available]';
	}
		
	return theme('cic_directory_view', $church, $address_block, $about, $links, $docs);
}

function cic_directory_get_district($circuit_name){
	
	//needs circuit name - gives district name
	$cd = cic_directory_get_circuits_districts();
	foreach( $cd['circuits'] as $circuit){
		if($circuit['name']==$circuit_name){
			return $circuit['district'];
		}
	}
}

function cic_directory_get_district_id($circuit){
	$cd = cic_directory_get_circuits_districts();
	foreach( $cd['circuits'] as $circuit){
		if($circuit['name']==$circuit_name){
			return $circuit['districtCode'];
		}
	}
}


function cic_directory_theme_var($label, $value, $style = 'sl', $extra=NULL){
	if($value==''){
		return;
	}
	if(is_array($extra)){
		if($extra['type']='image'){
			$append=" <a href='{$value}'><img style='vertical-align:middle;' src='/sites/all/modules/cic_directory/images/{$extra['file']}'></a>";
		}		
	}
	switch($style) {
		case 'sl': //same line
			if($label==''){
				return "<p class='data'><span class='value'>$value</span> $append</p>";				
			}else{
				return "<p class='data'><span class='label'>$label: </span><span class='value'>$value</span>$append</p>";				
			}
		case 'email': //same line
			return "<p class='data'><span class='label'>$label: </span><span class='value'><a href='mailto:{$value}'>{$value}</a></span>$append</p>";
		case 'url': //same line
			return "<p class='data'><span class='value'><a href='{$value}'>{$label}</a></span>$append</p>";
	}
	
	
}
